[tool:pytest]
junit_family = xunit2
addopts =
    --isort
    --ds=config.settings.test
    --nomigrations
    --cov-report=xml
    --cov-report=term
    --cov-config=setup.cfg
python_files = tests.py test_*.py tests_*.py


[isort]
line_length = 88
indent = 4
# use Vertical Hanging Indent mode
multi_line_output = 3
# add one line between `import abc` and `from abc import ABC`
lines_between_types = 1
# add a trailing comma to the end of from imports
include_trailing_comma = 1
# use tuple splitting for too long single import
use_parentheses = true
# split imports to multline, when 2 or more imports in one line
force_grid_wrap = 2
# `django` related settings
known_django = django
# add projects module to first party category
known_first_party = apps, config
# place imports, which section cannot be determined, to third party category
default_section = THIRDPARTY
sections = FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER


[mypy]
python_version = 3.8
check_untyped_defs = True
ignore_missing_imports = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
plugins =
    mypy_django_plugin.main

[mypy.plugins.django-stubs]
django_settings_module = config.settings.test

[mypy-*.migrations.*]
# Django migrations should not produce any errors:
ignore_errors = True

[mypy-*.settings.*]
ignore_errors = True

[mypy-*.manage.py]
ignore_errors = True

[coverage:run]
branch = True
source = .
omit =
    *migrations*,
    *tests*,
    *config*,
    manage.py,
    */conftest.py,
    */apps.py,
data_file = .tests_reports/.coverage
plugins =
    django_coverage_plugin

[coverage:report]
skip_covered = True
show_missing = True
sort = Cover
fail_under = 90

[coverage:xml]
output = .tests_reports/coverage.xml

[coverage:json]
output = .tests_reports/coverage.json

[coverage:html]
directory = .tests_reports/htmlcov


[flake8]
format = wemake
show_source = true
statistics = false
doctests = true
enable_extensions = G

max-line-length = 88

exclude =
    .git
    __pycache__
    .venv
    .eggs
    *.egg
    manage.py
    wsgi.py
ignore =
    # C101: Coding magic comment not found
    C101,
    # D100: Missing docstring in public module
    D100,
    # D101: Missing docstring in public class
    D101,
    # D102: Missing docstring in public method
    D102,
    # D103: Missing docstring in public function
    D103,
    # D104: Missing docstring in public package
    D104,
    # D105: Missing docstring in magic method
    D105,
    # D106: Missing docstring in public nested class
    D106,
    # D107: Missing docstring in __init__
    D107,
    # D200: One-line docstring should fit on one line with quotes
    D200,
    # RST210: Inline strong start-string without end-string
    RST210,
    # RST299: Inline emphasis start-string without end-string
    RST299,
    # W503: line break before binary operator
    W503,
    # WPS300: Found local folder import
    WPS300,
    # WPS305: Found `f` string
    WPS305,
    # WPS306: Found class without a base class: <class_name>
    WPS306,
    # WPS323: Found missing empty line between `coding` magic comment and code
    WPS323,
    # WPS602: Found using `@staticmethod`
    WPS602,
per-file-ignores =
    */tests/*.py:
        # E501: line too long
        E501,
        # S101: Use of assert detected
        S101,
        # S105: Possible hardcoded password
        S105,
        # WPS114: Found underscored name pattern: *
        WPS114,
        # WPS118: found too long name: <name>
        WPS118,
        # WPS211: Forbids to have too many arguments for a function or method
        WPS211,
        # WPS226: Forbids to over-use string constants
        WPS226,
        # WPS317: Found incorrect multi-line parameters
        WPS317,
        # WPS432: Found magic number
        WPS432,
        # WPS437: Found protected attribute usage: *
        WPS437,
        # WPS442: Found outer scope names shadowing
        WPS442,
        # WPS450: Found protected object import
        WPS450,
    # WPS111: Found too short name: n < 2
    # WPS125: Found builtin shadowing: <builtin>
    # WPS432: Found magic number: n
    */tests/*factories.py: WPS111, WPS125, WPS432,
    # N806: variable 'SomeModel' in function should be lowercase
    # WPS102: Found incorrect module name pattern
    # WPS219: Found too deep access level: n > 4
    # WPS301: Found dotted raw import: module.submodule.function
    # WPS432: Found magic number: <number>
    # WPS437: Found protected attribute usage
    */migrations/*.py: N806, WPS102, WPS219, WPS301, WPS432, WPS437,
    # E501: line too long
    # F403:  'from module import *' used; unable to detect undefined names
    # F405:  'member' may be undefined, or defined from star imports: module
    # WPS226: Found string constant over-use: <string> > 3
    # WPS347: Found vague import that may cause confusion: *
    # WPS407: Found mutable module constant
    # WPS432: Found magic number: <n>
    config/settings/*.py: E501, F403, F405, WPS226, WPS347, WPS407, WPS432,
    # WPS437: Found protected attribute usage: *
    # WPS609: Found direct magic attribute usage: *
    conftest.py: WPS437, WPS609,
    # WPS115: Found upper-case constant in a class
    */choices.py: WPS115,

# flake8-quotes
multiline-quotes = '''
docstring-quotes = """